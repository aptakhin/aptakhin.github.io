<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Goint to light!</title>
 <id>http://aptakhin.name/</id>
 <updated>2014-06-20T12:07:22.627606Z</updated>
 <author>
   <name>Alexander Ptakhi</name>
 </author>
 <link rel="self" href="http://aptakhin.name/feed.atom"/>
 <link rel="alternate" href="http://aptakhin.name/"/>
 
   <entry>
     <title>Simplification vs Accuracy</title>
     <id>http://aptakhin.name/2014/06/20/simplification-vs-accuracy</id>
     <link rel="alternate" href="http://aptakhin.name/2014/06/20/simplification-vs-accuracy.html"/>
     <updated>2014-06-20T00:00:00Z</updated>
     <content type="xhtml">
       <div xmlns="http://www.w3.org/1999/xhtml"><p>Some time ago site StackOverflow.com (SO further) has several downtimes. And many real programmers laughed at programmers who used SO and how latter program at all.
This is small note to reconcile them. I think there are no real reason not to SO. Although Problem more common. There always be argues between simplification and accuracy in describing subject.
As a simple example. We solved at college and university many physics tasks with constant gravity force 9,81 m/s^2. And we omit important words "in homogenous constant force field near Earth ground with relative error 1%". Words are omitted when it's clear. Also it's become more complicated to keep everything in mind, because our technologies build on bones of elder systems and growing and growing with many abstractions layers.</p>
<p>Caption Obvious often says you should think before using any tool. And often we can do things without understanding. It's good ability to say "Stop" before doing something important.</p>
<p>Does your favourite instrument have good documentation? Really, are you sure that API generated from code is enough?
After writing code with 30% time, we'll debug it 70% of time. And then we can't go rest, we should spend 50%-100% more time to write good documentation.</p>
<p>Wikipedia is good enough for first approach. It gives you some base information about unknown subject. The same idea with SO â€” you need answers for specific problem, you ask Big Search text field, he asks Google, voila with great chance answer is found. Maybe answer isn't perfect, but remember it's first approach. It's just like centralized wiki about any language, any library. </p>
<p>Hundreds and thousands programmers deals with hundreds and thousands different problems. SO just is collection of solutions.
I notice how developers (put me it this list too) find code solution in network and adopt code for their purposes. Why do we do this? Are we bad programmers? Maybe yes. But surely most of work we do regardless our job is routine work, which doesn't require even enabling of brains. More often job requires out experience in area. Either experiance or you are just very clever guy. Usually we don't sort two-linked arrays with N^2 cost, but while I writing this post Python blog generator will do it many times, but who cares?</p>
<p>So SO is part evolution of documentation. And it's useful for asking/searching and writing answers like wiki, which not only exists, but develops. What will we do when something <a href="#allcrashes">crashes</a>? This is good question out of note.</p>
<p>Final joke must be about summation two integers in JavaScript with jQuery.</p>
<ul id="bib">
  <li>[1] <a id="allcrashes" href="https://research.microsoft.com/en-us/people/mickens/thenightwatch.pdf">"The Night Watch" by James Mickens</a> about system programmers and others</li>
</ul></div>
     </content>
   </entry>
 
</feed>
